
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOPERADORleftEQUALLESSGREATERLESSEQUALGREATEQUALNOTEQUALleftORleftANDAND ASSIGN COLON COMMA CONSOLE CONST DIVEQ ELSE EQUAL FOR GREATEQUAL GREATER ID IF LBRACE LBRACKET LESS LESSEQUAL LET LOG LPAREN MINUSEQ MINUSMINUS NOTEQUAL NUM OPERADOR OR PLUSEQ PLUSPLUS POWEQ PUNTO RBRACE RBRACKET RPAREN SEMICOLON STRING TIMESEQ VAR WHILE\n    programa : declaraciones\n            | empty\n    \n    declaraciones : declaraciones declaracion\n    \n    declaraciones : declaracion\n    \n    declaracion : asignacion_multiple\n                | asignacion_multiple_sin_semicolon\n                | asignacion\n                | asignacion_sin_semicolon\n                | mostrar\n                | condicional\n                | bucle_for\n                | unario\n                | unario_sin_semicolon\n    \n    asignacion : LET ID ASSIGN expresion SEMICOLON\n               | VAR ID ASSIGN expresion SEMICOLON\n               | CONST ID ASSIGN expresion SEMICOLON\n               | LET ID ASSIGN expresion_array SEMICOLON\n               | CONST ID ASSIGN expresion_array SEMICOLON\n               | VAR ID ASSIGN expresion_array SEMICOLON\n               | LET ID ASSIGN objeto_array SEMICOLON\n               | CONST ID ASSIGN objeto_array SEMICOLON\n               | VAR ID ASSIGN objeto_array SEMICOLON\n    \n    asignacion_sin_semicolon : LET ID ASSIGN expresion\n                             | VAR ID ASSIGN expresion\n                             | CONST ID ASSIGN expresion\n                             | LET ID ASSIGN expresion_array\n                             | CONST ID ASSIGN expresion_array\n                             | VAR ID ASSIGN expresion_array\n                             | LET ID ASSIGN objeto_array\n                             | CONST ID ASSIGN objeto_array\n                             | VAR ID ASSIGN objeto_array\n    \n    asignacion_multiple : LET variables_assign SEMICOLON\n                        | VAR variables_assign SEMICOLON\n                        | CONST variables_assign SEMICOLON\n    \n    asignacion_multiple_sin_semicolon : LET variables_assign\n                                      | VAR variables_assign\n                                      | CONST variables_assign\n    \n    variables_assign : ID\n                     | variables_assign COMMA ID ASSIGN expresion\n    \n    variables_assign : variables_assign COMMA ID\n    \n    mostrar : CONSOLE PUNTO LOG LPAREN expresion RPAREN\n    \n    expresion : valor\n    \n    expresion : ID\n    \n    expresion_array : LBRACKET RBRACKET \n                    | LBRACKET elementos RBRACKET\n    \n    elementos : expresion\n              | elementos COMMA expresion\n    \n    expresion : ID LBRACKET NUM RBRACKET\n    \n    objeto_array : LBRACKET LBRACE RBRACE RBRACKET\n                 | LBRACKET objetos RBRACKET\n    \n    objetos : objeto\n            | objetos COMMA objeto\n    \n    objeto : LBRACE propiedades RBRACE\n    \n    propiedades : propiedad \n                | propiedades COMMA propiedad\n    \n    propiedad : ID COLON valor\n    \n    expresion : ID LBRACKET NUM RBRACKET PUNTO ID\n    \n    unario : ID MINUSMINUS SEMICOLON\n           | ID PLUSPLUS SEMICOLON\n           | ID ASSIGN expresion SEMICOLON\n           | ID PLUSEQ expresion SEMICOLON\n           | ID MINUSEQ expresion SEMICOLON\n           | ID TIMESEQ expresion SEMICOLON\n           | ID DIVEQ expresion SEMICOLON\n           | ID POWEQ expresion SEMICOLON\n    \n    unario_sin_semicolon : ID MINUSMINUS\n           | ID PLUSPLUS\n           | ID ASSIGN expresion\n           | ID PLUSEQ expresion\n           | ID MINUSEQ expresion\n           | ID TIMESEQ expresion\n           | ID DIVEQ expresion\n           | ID POWEQ expresion\n    \n    expresion : expresion OPERADOR expresion\n    \n    valor : NUM\n          | STRING\n    \n    condicional : IF LPAREN comparacion RPAREN LBRACE declaraciones RBRACE else_if_blocks else_block\n    \n    else_block : ELSE LBRACE declaraciones RBRACE\n                | empty\n    \n    else_if_blocks : empty\n                   | else_if_blocks else_if_block\n    \n    else_if_block : ELSE IF LPAREN comparacion RPAREN LBRACE declaraciones RBRACE\n    \n    comparacion : expresion EQUAL expresion\n                | expresion LESS expresion\n                | expresion GREATER expresion\n                | expresion LESSEQUAL expresion\n                | expresion GREATEQUAL expresion\n                | expresion NOTEQUAL expresion\n                | comparacion OR comparacion\n                | comparacion AND comparacion\n    \n    bucle_for : FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON unario RPAREN LBRACE declaraciones RBRACE\n    empty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,130,131,137,139,140,153,160,165,166,167,177,178,180,193,194,199,],[-92,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,-39,-45,-50,-48,-41,-49,-92,-57,-92,-80,-77,-81,-79,-91,-78,-82,]),'LET':([0,2,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,38,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,117,130,131,137,139,140,141,153,160,165,166,167,177,178,180,181,188,190,191,193,194,197,198,199,],[14,14,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,62,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,14,-39,-45,-50,-48,-41,14,-49,-92,-57,-92,-80,-77,-81,-79,14,14,14,14,-91,-78,14,14,-82,]),'VAR':([0,2,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,38,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,117,130,131,137,139,140,141,153,160,165,166,167,177,178,180,181,188,190,191,193,194,197,198,199,],[15,15,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,63,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,15,-39,-45,-50,-48,-41,15,-49,-92,-57,-92,-80,-77,-81,-79,15,15,15,15,-91,-78,15,15,-82,]),'CONST':([0,2,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,38,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,117,130,131,137,139,140,141,153,160,165,166,167,177,178,180,181,188,190,191,193,194,197,198,199,],[16,16,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,64,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,16,-39,-45,-50,-48,-41,16,-49,-92,-57,-92,-80,-77,-81,-79,16,16,16,16,-91,-78,16,16,-82,]),'CONSOLE':([0,2,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,117,130,131,137,139,140,141,153,160,165,166,167,177,178,180,181,188,190,191,193,194,197,198,199,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,18,-39,-45,-50,-48,-41,18,-49,-92,-57,-92,-80,-77,-81,-79,18,18,18,18,-91,-78,18,18,-82,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,117,130,131,137,139,140,141,153,160,165,166,167,177,178,179,180,181,188,190,191,193,194,197,198,199,],[19,19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,19,-39,-45,-50,-48,-41,19,-49,-92,-57,-92,-80,-77,-81,189,-79,19,19,19,19,-91,-78,19,19,-82,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,108,109,110,111,112,113,115,117,130,131,137,139,140,141,153,160,165,166,167,177,178,180,181,188,190,191,193,194,197,198,199,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,20,-39,-45,-50,-48,-41,20,-49,-92,-57,-92,-80,-77,-81,-79,20,20,20,20,-91,-78,20,20,-82,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,98,99,100,101,102,104,108,109,110,111,112,113,115,117,127,128,129,130,131,132,137,139,140,141,142,153,155,158,159,160,165,166,167,171,172,173,174,175,176,177,178,180,181,188,190,191,192,193,194,197,198,199,],[17,17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,25,27,-3,-35,-38,-36,-38,-37,-38,-66,-67,48,48,48,48,48,48,48,-32,65,48,-33,48,-34,48,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,95,96,97,-40,-23,-26,-29,48,-24,-28,-31,-25,-27,-30,-60,48,-61,-62,-63,-64,-65,48,48,48,48,48,48,48,48,48,48,48,-14,-17,-20,-44,136,-15,-19,-22,-16,-18,-21,-74,17,48,48,48,-39,-45,48,-50,-48,-41,17,162,-49,136,136,165,-92,-57,-92,-80,48,48,48,48,48,48,-77,-81,-79,17,17,17,17,48,-91,-78,17,17,-82,]),'RBRACE':([4,5,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,39,42,44,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,99,100,101,102,104,108,109,110,111,112,113,115,130,131,134,135,137,139,140,141,153,160,163,164,165,166,167,177,178,180,190,191,193,194,198,199,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-35,-38,-36,-38,-37,-38,-66,-67,-32,-33,-34,-58,-59,-43,-68,-42,-75,-76,-69,-70,-71,-72,-73,-40,-23,-26,-29,-24,-28,-31,-25,-27,-30,-60,-61,-62,-63,-64,-65,-14,-17,-20,-44,133,-15,-19,-22,-16,-18,-21,-74,-39,-45,154,-54,-50,-48,-41,160,-49,-92,-55,-56,-57,-92,-80,-77,-81,-79,193,194,-91,-78,199,-82,]),'MINUSMINUS':([17,162,],[28,169,]),'PLUSPLUS':([17,162,],[29,170,]),'ASSIGN':([17,23,25,27,65,95,96,97,162,],[30,41,43,45,98,127,128,129,171,]),'PLUSEQ':([17,162,],[31,172,]),'MINUSEQ':([17,162,],[32,173,]),'TIMESEQ':([17,162,],[33,174,]),'DIVEQ':([17,162,],[34,175,]),'POWEQ':([17,162,],[35,176,]),'PUNTO':([18,139,],[36,159,]),'LPAREN':([19,20,58,189,],[37,38,84,192,]),'SEMICOLON':([22,23,24,25,26,27,28,29,48,49,50,51,52,53,54,55,56,57,61,65,66,67,68,70,71,72,73,74,75,99,100,101,102,108,109,110,111,112,113,115,118,119,120,121,122,123,124,125,126,130,131,137,139,143,144,145,146,147,148,149,150,151,153,165,169,170,182,183,184,185,186,187,],[39,-38,42,-38,44,-38,46,47,-43,77,-42,-75,-76,79,80,81,82,83,94,-40,99,100,101,108,109,110,111,112,113,-14,-17,-20,-44,-15,-19,-22,-16,-18,-21,-74,-89,-90,-83,-84,-85,-86,-87,-88,142,-39,-45,-50,-48,99,100,101,108,109,110,111,112,113,-49,-57,46,47,77,79,80,81,82,83,]),'COMMA':([22,23,24,25,26,27,48,50,51,52,65,103,105,106,107,115,130,134,135,139,152,154,157,163,164,165,],[40,-38,40,-38,40,-38,-43,-42,-75,-76,-40,132,138,-46,-51,-74,-39,155,-54,-48,-47,-53,-52,-55,-56,-57,]),'NUM':([30,31,32,33,34,35,37,41,43,45,69,76,78,84,86,87,88,89,90,91,92,93,94,98,127,128,129,132,156,171,172,173,174,175,176,192,],[51,51,51,51,51,51,51,51,51,51,51,114,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STRING':([30,31,32,33,34,35,37,41,43,45,69,78,84,86,87,88,89,90,91,92,93,94,98,127,128,129,132,156,171,172,173,174,175,176,192,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LOG':([36,],[58,]),'LBRACKET':([41,43,45,48,127,128,129,],[69,69,69,76,69,69,69,]),'RPAREN':([46,47,48,50,51,52,59,77,79,80,81,82,83,115,116,118,119,120,121,122,123,124,125,139,161,165,195,],[-58,-59,-43,-42,-75,-76,85,-60,-61,-62,-63,-64,-65,-74,140,-89,-90,-83,-84,-85,-86,-87,-88,-48,168,-57,196,]),'OPERADOR':([48,49,50,51,52,53,54,55,56,57,60,66,70,73,106,115,116,120,121,122,123,124,125,130,139,143,146,149,152,165,182,183,184,185,186,187,],[-43,78,-42,-75,-76,78,78,78,78,78,78,78,78,78,78,-74,78,78,78,78,78,78,78,78,-48,78,78,78,78,-57,78,78,78,78,78,78,]),'EQUAL':([48,50,51,52,60,115,139,165,],[-43,-42,-75,-76,88,-74,-48,-57,]),'LESS':([48,50,51,52,60,115,139,165,],[-43,-42,-75,-76,89,-74,-48,-57,]),'GREATER':([48,50,51,52,60,115,139,165,],[-43,-42,-75,-76,90,-74,-48,-57,]),'LESSEQUAL':([48,50,51,52,60,115,139,165,],[-43,-42,-75,-76,91,-74,-48,-57,]),'GREATEQUAL':([48,50,51,52,60,115,139,165,],[-43,-42,-75,-76,92,-74,-48,-57,]),'NOTEQUAL':([48,50,51,52,60,115,139,165,],[-43,-42,-75,-76,93,-74,-48,-57,]),'RBRACKET':([48,50,51,52,69,103,105,106,107,114,115,133,139,152,154,157,165,],[-43,-42,-75,-76,102,131,137,-46,-51,139,-74,153,-48,-47,-53,-52,-57,]),'OR':([48,50,51,52,59,115,118,119,120,121,122,123,124,125,126,139,165,195,],[-43,-42,-75,-76,86,-74,-89,-90,-83,-84,-85,-86,-87,-88,86,-48,-57,86,]),'AND':([48,50,51,52,59,115,118,119,120,121,122,123,124,125,126,139,165,195,],[-43,-42,-75,-76,87,-74,87,-90,-83,-84,-85,-86,-87,-88,87,-48,-57,87,]),'LBRACE':([69,85,138,168,179,196,],[104,117,158,181,188,197,]),'COLON':([136,],[156,]),'ELSE':([160,166,167,178,199,],[-92,179,-80,-81,-82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([0,117,181,188,197,],[2,141,190,191,198,]),'empty':([0,160,166,],[3,167,180,]),'declaracion':([0,2,117,141,181,188,190,191,197,198,],[4,21,4,21,4,4,21,21,4,21,]),'asignacion_multiple':([0,2,117,141,181,188,190,191,197,198,],[5,5,5,5,5,5,5,5,5,5,]),'asignacion_multiple_sin_semicolon':([0,2,117,141,181,188,190,191,197,198,],[6,6,6,6,6,6,6,6,6,6,]),'asignacion':([0,2,38,117,141,181,188,190,191,197,198,],[7,7,61,7,7,7,7,7,7,7,7,]),'asignacion_sin_semicolon':([0,2,117,141,181,188,190,191,197,198,],[8,8,8,8,8,8,8,8,8,8,]),'mostrar':([0,2,117,141,181,188,190,191,197,198,],[9,9,9,9,9,9,9,9,9,9,]),'condicional':([0,2,117,141,181,188,190,191,197,198,],[10,10,10,10,10,10,10,10,10,10,]),'bucle_for':([0,2,117,141,181,188,190,191,197,198,],[11,11,11,11,11,11,11,11,11,11,]),'unario':([0,2,117,141,142,181,188,190,191,197,198,],[12,12,12,12,161,12,12,12,12,12,12,]),'unario_sin_semicolon':([0,2,117,141,181,188,190,191,197,198,],[13,13,13,13,13,13,13,13,13,13,]),'variables_assign':([14,15,16,],[22,24,26,]),'expresion':([30,31,32,33,34,35,37,41,43,45,69,78,84,86,87,88,89,90,91,92,93,94,98,127,128,129,132,171,172,173,174,175,176,192,],[49,53,54,55,56,57,60,66,70,73,106,115,116,60,60,120,121,122,123,124,125,60,130,143,146,149,152,182,183,184,185,186,187,60,]),'valor':([30,31,32,33,34,35,37,41,43,45,69,78,84,86,87,88,89,90,91,92,93,94,98,127,128,129,132,156,171,172,173,174,175,176,192,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,164,50,50,50,50,50,50,50,]),'comparacion':([37,86,87,94,192,],[59,118,119,126,195,]),'expresion_array':([41,43,45,127,128,129,],[67,71,74,144,147,150,]),'objeto_array':([41,43,45,127,128,129,],[68,72,75,145,148,151,]),'elementos':([69,],[103,]),'objetos':([69,],[105,]),'objeto':([69,138,],[107,157,]),'propiedades':([104,158,],[134,134,]),'propiedad':([104,155,158,],[135,163,135,]),'else_if_blocks':([160,],[166,]),'else_block':([166,],[177,]),'else_if_block':([166,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaraciones','programa',1,'p_programa','JS.py',574),
  ('programa -> empty','programa',1,'p_programa','JS.py',575),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','JS.py',581),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaracionesDeclaracion','JS.py',589),
  ('declaracion -> asignacion_multiple','declaracion',1,'p_declaracion','JS.py',594),
  ('declaracion -> asignacion_multiple_sin_semicolon','declaracion',1,'p_declaracion','JS.py',595),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','JS.py',596),
  ('declaracion -> asignacion_sin_semicolon','declaracion',1,'p_declaracion','JS.py',597),
  ('declaracion -> mostrar','declaracion',1,'p_declaracion','JS.py',598),
  ('declaracion -> condicional','declaracion',1,'p_declaracion','JS.py',599),
  ('declaracion -> bucle_for','declaracion',1,'p_declaracion','JS.py',600),
  ('declaracion -> unario','declaracion',1,'p_declaracion','JS.py',601),
  ('declaracion -> unario_sin_semicolon','declaracion',1,'p_declaracion','JS.py',602),
  ('asignacion -> LET ID ASSIGN expresion SEMICOLON','asignacion',5,'p_asignacion','JS.py',607),
  ('asignacion -> VAR ID ASSIGN expresion SEMICOLON','asignacion',5,'p_asignacion','JS.py',608),
  ('asignacion -> CONST ID ASSIGN expresion SEMICOLON','asignacion',5,'p_asignacion','JS.py',609),
  ('asignacion -> LET ID ASSIGN expresion_array SEMICOLON','asignacion',5,'p_asignacion','JS.py',610),
  ('asignacion -> CONST ID ASSIGN expresion_array SEMICOLON','asignacion',5,'p_asignacion','JS.py',611),
  ('asignacion -> VAR ID ASSIGN expresion_array SEMICOLON','asignacion',5,'p_asignacion','JS.py',612),
  ('asignacion -> LET ID ASSIGN objeto_array SEMICOLON','asignacion',5,'p_asignacion','JS.py',613),
  ('asignacion -> CONST ID ASSIGN objeto_array SEMICOLON','asignacion',5,'p_asignacion','JS.py',614),
  ('asignacion -> VAR ID ASSIGN objeto_array SEMICOLON','asignacion',5,'p_asignacion','JS.py',615),
  ('asignacion_sin_semicolon -> LET ID ASSIGN expresion','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',621),
  ('asignacion_sin_semicolon -> VAR ID ASSIGN expresion','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',622),
  ('asignacion_sin_semicolon -> CONST ID ASSIGN expresion','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',623),
  ('asignacion_sin_semicolon -> LET ID ASSIGN expresion_array','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',624),
  ('asignacion_sin_semicolon -> CONST ID ASSIGN expresion_array','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',625),
  ('asignacion_sin_semicolon -> VAR ID ASSIGN expresion_array','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',626),
  ('asignacion_sin_semicolon -> LET ID ASSIGN objeto_array','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',627),
  ('asignacion_sin_semicolon -> CONST ID ASSIGN objeto_array','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',628),
  ('asignacion_sin_semicolon -> VAR ID ASSIGN objeto_array','asignacion_sin_semicolon',4,'p_asignacion_sin_semicolon','JS.py',629),
  ('asignacion_multiple -> LET variables_assign SEMICOLON','asignacion_multiple',3,'p_asignacionMultiple','JS.py',638),
  ('asignacion_multiple -> VAR variables_assign SEMICOLON','asignacion_multiple',3,'p_asignacionMultiple','JS.py',639),
  ('asignacion_multiple -> CONST variables_assign SEMICOLON','asignacion_multiple',3,'p_asignacionMultiple','JS.py',640),
  ('asignacion_multiple_sin_semicolon -> LET variables_assign','asignacion_multiple_sin_semicolon',2,'p_asignacionMultipleSinSemiColon','JS.py',645),
  ('asignacion_multiple_sin_semicolon -> VAR variables_assign','asignacion_multiple_sin_semicolon',2,'p_asignacionMultipleSinSemiColon','JS.py',646),
  ('asignacion_multiple_sin_semicolon -> CONST variables_assign','asignacion_multiple_sin_semicolon',2,'p_asignacionMultipleSinSemiColon','JS.py',647),
  ('variables_assign -> ID','variables_assign',1,'p_variablesAssign','JS.py',652),
  ('variables_assign -> variables_assign COMMA ID ASSIGN expresion','variables_assign',5,'p_variablesAssign','JS.py',653),
  ('variables_assign -> variables_assign COMMA ID','variables_assign',3,'p_variablesAssignVars','JS.py',663),
  ('mostrar -> CONSOLE PUNTO LOG LPAREN expresion RPAREN','mostrar',6,'p_mostrar','JS.py',668),
  ('expresion -> valor','expresion',1,'p_expresion','JS.py',673),
  ('expresion -> ID','expresion',1,'p_expresionIdentificador','JS.py',679),
  ('expresion_array -> LBRACKET RBRACKET','expresion_array',2,'p_expresionArray','JS.py',685),
  ('expresion_array -> LBRACKET elementos RBRACKET','expresion_array',3,'p_expresionArray','JS.py',686),
  ('elementos -> expresion','elementos',1,'p_elementos','JS.py',694),
  ('elementos -> elementos COMMA expresion','elementos',3,'p_elementos','JS.py',695),
  ('expresion -> ID LBRACKET NUM RBRACKET','expresion',4,'p_elementoArray','JS.py',704),
  ('objeto_array -> LBRACKET LBRACE RBRACE RBRACKET','objeto_array',4,'p_objetoArray','JS.py',710),
  ('objeto_array -> LBRACKET objetos RBRACKET','objeto_array',3,'p_objetoArray','JS.py',711),
  ('objetos -> objeto','objetos',1,'p_objetos','JS.py',719),
  ('objetos -> objetos COMMA objeto','objetos',3,'p_objetos','JS.py',720),
  ('objeto -> LBRACE propiedades RBRACE','objeto',3,'p_objeto','JS.py',728),
  ('propiedades -> propiedad','propiedades',1,'p_propiedades','JS.py',733),
  ('propiedades -> propiedades COMMA propiedad','propiedades',3,'p_propiedades','JS.py',734),
  ('propiedad -> ID COLON valor','propiedad',3,'p_propiedad','JS.py',742),
  ('expresion -> ID LBRACKET NUM RBRACKET PUNTO ID','expresion',6,'p_expresionAccesoObjetoArray','JS.py',748),
  ('unario -> ID MINUSMINUS SEMICOLON','unario',3,'p_unario','JS.py',757),
  ('unario -> ID PLUSPLUS SEMICOLON','unario',3,'p_unario','JS.py',758),
  ('unario -> ID ASSIGN expresion SEMICOLON','unario',4,'p_unario','JS.py',759),
  ('unario -> ID PLUSEQ expresion SEMICOLON','unario',4,'p_unario','JS.py',760),
  ('unario -> ID MINUSEQ expresion SEMICOLON','unario',4,'p_unario','JS.py',761),
  ('unario -> ID TIMESEQ expresion SEMICOLON','unario',4,'p_unario','JS.py',762),
  ('unario -> ID DIVEQ expresion SEMICOLON','unario',4,'p_unario','JS.py',763),
  ('unario -> ID POWEQ expresion SEMICOLON','unario',4,'p_unario','JS.py',764),
  ('unario_sin_semicolon -> ID MINUSMINUS','unario_sin_semicolon',2,'p_unario_sin_semicolon','JS.py',773),
  ('unario_sin_semicolon -> ID PLUSPLUS','unario_sin_semicolon',2,'p_unario_sin_semicolon','JS.py',774),
  ('unario_sin_semicolon -> ID ASSIGN expresion','unario_sin_semicolon',3,'p_unario_sin_semicolon','JS.py',775),
  ('unario_sin_semicolon -> ID PLUSEQ expresion','unario_sin_semicolon',3,'p_unario_sin_semicolon','JS.py',776),
  ('unario_sin_semicolon -> ID MINUSEQ expresion','unario_sin_semicolon',3,'p_unario_sin_semicolon','JS.py',777),
  ('unario_sin_semicolon -> ID TIMESEQ expresion','unario_sin_semicolon',3,'p_unario_sin_semicolon','JS.py',778),
  ('unario_sin_semicolon -> ID DIVEQ expresion','unario_sin_semicolon',3,'p_unario_sin_semicolon','JS.py',779),
  ('unario_sin_semicolon -> ID POWEQ expresion','unario_sin_semicolon',3,'p_unario_sin_semicolon','JS.py',780),
  ('expresion -> expresion OPERADOR expresion','expresion',3,'p_expresionMultiple','JS.py',788),
  ('valor -> NUM','valor',1,'p_valor','JS.py',793),
  ('valor -> STRING','valor',1,'p_valor','JS.py',794),
  ('condicional -> IF LPAREN comparacion RPAREN LBRACE declaraciones RBRACE else_if_blocks else_block','condicional',9,'p_condicional','JS.py',800),
  ('else_block -> ELSE LBRACE declaraciones RBRACE','else_block',4,'p_else_block','JS.py',806),
  ('else_block -> empty','else_block',1,'p_else_block','JS.py',807),
  ('else_if_blocks -> empty','else_if_blocks',1,'p_else_if_blocks','JS.py',814),
  ('else_if_blocks -> else_if_blocks else_if_block','else_if_blocks',2,'p_else_if_blocks','JS.py',815),
  ('else_if_block -> ELSE IF LPAREN comparacion RPAREN LBRACE declaraciones RBRACE','else_if_block',8,'p_else_if_block','JS.py',822),
  ('comparacion -> expresion EQUAL expresion','comparacion',3,'p_comparacion','JS.py',828),
  ('comparacion -> expresion LESS expresion','comparacion',3,'p_comparacion','JS.py',829),
  ('comparacion -> expresion GREATER expresion','comparacion',3,'p_comparacion','JS.py',830),
  ('comparacion -> expresion LESSEQUAL expresion','comparacion',3,'p_comparacion','JS.py',831),
  ('comparacion -> expresion GREATEQUAL expresion','comparacion',3,'p_comparacion','JS.py',832),
  ('comparacion -> expresion NOTEQUAL expresion','comparacion',3,'p_comparacion','JS.py',833),
  ('comparacion -> comparacion OR comparacion','comparacion',3,'p_comparacion','JS.py',834),
  ('comparacion -> comparacion AND comparacion','comparacion',3,'p_comparacion','JS.py',835),
  ('bucle_for -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON unario RPAREN LBRACE declaraciones RBRACE','bucle_for',11,'p_bucle_for','JS.py',841),
  ('empty -> <empty>','empty',0,'p_empty','JS.py',846),
]
